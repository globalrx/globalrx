# General
# ------------------------------------------------------------------------------
# run migrations on container start?
MIGRATE=True
# run the EMA, FDA, and update_latest_drug_labels data scraping and ingest scripts on container start?
LOAD=False
# put Django into debug mode. Do not use for production.
DEBUG=True
# Default to INFO, set to DEBUG for low level; INFO or WARNING for production
LOG_LEVEL=INFO
SECRET_KEY=secretdoesntmatter!whenindev
DJANGO_SUPERUSER_USERNAME=admin
DJANGO_SUPERUSER_PASSWORD=Wtb8qbY0kH54bF
DJANGO_SUPERUSER_EMAIL=cole_crawford@fas.harvard.edu
# create a Django admin using the DJANGO_SUPERUSER_* variables?
# Warning: set to false after user is created, otherwise Django will crash when it tries to create an existing user
INIT_SUPERUSER=False

# PostgreSQL
# ------------------------------------------------------------------------------
# DATABASE_URL is equivalent to the POSTGRES_* variables; the Postgres container needs POSTGRES_* to provision itself
POSTGRES_HOST=postgres
POSTGRES_PORT=5432
POSTGRES_DB=postgres
POSTGRES_USER=postgres
POSTGRES_PASSWORD=fghyucvsafd
DATABASE_URL=postgres://postgres:fghyucvsafd@postgres:5432/postgres

# Elasticsearch
# ------------------------------------------------------------------------------
# Password for the 'elastic' user (at least 6 characters)
ELASTIC_PASSWORD=dKnaSVB4bTkRzL

# Password for the 'kibana_system' user (at least 6 characters)
KIBANA_PASSWORD=DU5z8Hsl792jTN

# Version of Elastic products
STACK_VERSION=8.7.0

# Set the cluster name
CLUSTER_NAME=dle-elastic-cluster

# Set to 'basic' or 'trial' to automatically start the 30-day trial
# Trial license needed for ML features
LICENSE=basic

# Port to expose Elasticsearch HTTP API to the host
#ES_PORT=127.0.0.1:9200
ES_PORT=9200

# Port to expose Kibana to the host
KIBANA_PORT=5601
#KIBANA_PORT=80

# Increase or decrease based on the available host memory (in bytes)
# MEM_LIMIT=1073741824 # 1 GB
MEM_LIMIT=2147483648 # 2 GB
# MEM_LIMIT=4294967296 # 4 GB or more may be needed for ML features
# MEM_LIMIT=6442450944 # 6 GB
# MEM_LIMIT=8589934592 # 8 GB
# MEM_LIMIT=10737418240 # 10GB
KIBANA_MEM_LIMIT=1073741824 # 1 GB

# By default, JVM heap size is automatically set based on a node's roles and total memory
# Heap size based on available RAM (50% of total memory) - see https://www.elastic.co/guide/en/elasticsearch/reference/current/advanced-configuration.html#set-jvm-heap-size
# For ML nodes, a smaller heap size (35-40%) is recommended: https://www.elastic.co/blog/sizing-machine-learning-with-elasticsearch
# Setting JVM heap by ES_JAVA_OPTS env var is not recommended for production
# ES_JAVA_OPTS="-Xms3500M -Xmx3500M"

# Project namespace (defaults to the current folder name if not set)
COMPOSE_PROJECT_NAME=dle

# URL for Django to connect to ES
ELASTICSEARCH_URL='https://es01:9200'

ELASTICSEARCH_USER=elastic

# Elastic ingest
# ------------------------------------------------------------------------------
# In the entrypoint, whether to load data from vector JSON files into Django
# Doesn't work well because of complex composite keys / nested structure
# LOAD_FDA_VECTORS=False
# LOAD_TGA_VECTORS=False
# LOAD_EMA_VECTORS=False

# Possible TODO: create ability to load data from fixtures (possible RAM issue) or from a PSQL dump (would need pg_restore in container)
# Both of these might be better as one-off command runs rather than part of the entrypoint script?

# Do not use elasticsearch-django's managment of the index (eg syncing all Django changes to ES immediately)
ES_AUTO_SYNC=False
# See the entrypoint. Assuming vectors already exist in Django, this will load them to Elasticsearch
PROVISION_ES=True

# Nginx
# ------------------------------------------------------------------------------
# For local dev, use Django's dev server rather than Nginx + Gunicorn
USE_NGINX=False

# API
# ------------------------------------------------------------------------------
# For production, set an API endpoint. This should be the Django app URL including the port if not 80.
# Even if Django and Elastic are running on different servers, this should be the Django app URL as 
# it proxies the Elasticsearch requests.
# For localhost, leave this unset (defaults to http://localhost:8000 in settings.py)
# API_ENDPOINT="searchrx-1695064113.us-east-1.elb.amazonaws.com"
